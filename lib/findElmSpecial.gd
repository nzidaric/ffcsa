#############################################################################
##
##
#W  findElmSpecial.gd         The FFCSA Package                Nusa
##

#############################################################################
##
#O  FindONBIGenerator( <f>) . . . . . . . . finds all normal elements in a f.f.
##
##  <#GAPDoc Label="FindONBIGenerator">
##  <ManSection>
##  <Meth Name="FindONBIGenerator" Arg="F"/>
##  <Meth Name="FindONBIGeneratorB" Arg="F"/>
##  <Meth Name="FindONBIIGenerator" Arg="F"/>
##  <Meth Name="FindONBIIGeneratorB" Arg="F"/>
##
##  <Description>
##  return the normal element generating the ONB of Type-I or Type-II for the
##  field <A>F</A>, respectively.
##  </Description>
##  </ManSection>
##  <#/GAPDoc>
DeclareOperation( "FindONBIGenerator" , [IsField]);
DeclareOperation( "FindONBIGeneratorB" , [IsField]);
DeclareOperation( "FindONBIIGenerator" , [IsField]);
DeclareOperation( "FindONBIIGeneratorB" , [IsField]);
##### REMOVED IgnoreCOnjugates from name, but using it!

#############################################################################
##
#O  FindONBIGenerator( <f>) . . . . . . . . finds all normal elements in a f.f.
##
##  <#GAPDoc Label="ProfileNBGenerators">
##  <ManSection>
##  <Meth Name="ProfileNBGenerators" Arg="F"/>
##  <Meth Name="FindSmallestTNBGenerator" Arg="F"/>
##  <Description>
##  <C>ProfileNBGenerators</C> finds all normal elements of the finite field
##  <A>F</A> and lists their profile <C>[c, e]</C>, where <C>e</C> is the current
##  exponent and <C>c</C> the <Ref Oper="ComplexityOfT"/> of the normal basis
##  generated by the normal element <M>g^e</M>, where <M>g</M> is the generator
##  of <A>F</A>. <P/>
##  <C>FindSmallestTNBGenerator</C> uses the profile to return the element
##  <M>g^e</M> with the smallest value <M>C_T</M>. It is a solution to the
##  motivational example <Ref Sect="example1"/>. <P/>
##  <Example>
##  <![CDATA[
##  gap> F := GF(2^7);; B := Basis(F);; FindNormalFFEsIgnoreConjugates(F);
##  [ 13, 19, 21, 27, 31, 43, 63 ]
##  gap> ProfileNBGenerators(F);
##  [ [ 13, 19 ], [ 19, 27 ], [ 21, 21 ], [ 27, 27 ], [ 31, 25 ], [ 43, 21 ],
##  [ 63, 21 ] ]
##  gap> FindSmallestTNBGenerator(F);
##  Z(2^7)^13
##  gap> FindSmallestTNBGenerator(GF(2,11));
##  Z(2^11)^439
##  ]]>
##  </Example>
##  </Description>
##  </ManSection>
##  <#/GAPDoc>
DeclareOperation( "ProfileNBGenerators" , [IsField]);
DeclareOperation( "FindBestTNBGeneratorProfile" , [IsField]);
DeclareOperation( "FindSmallestTNBGenerator" , [IsField]);

#############################################################################
##
#O  FindNormalFFEBestTransitionMat( <B>.) . . . . . . .
#   finds the normal element that yields best transition matrices
##
##  <#GAPDoc Label="ProfileNBtoBTransitionMat">
##  <ManSection>
##  <Meth Name="ProfileNBtoBTransitionMat" Arg="B"/>
##  <Meth Name="FindSmallestAreaNBtoBProfile" Arg="B"/>
##
##  <Description>
##  <C>ProfileNBtoBTransitionMat</C> finds all normal elements of the field
##  <A>F</A>, generates their normal bases <C>NB</C>, and computes their profile
##  <C>[d1, A1, d2, A2, e]</C> for the given basis <A>B</A>.
##  Value <C>e</C> is the exponent of the normal element, <C>d1, A1</C> are
##  the delay and area of the <M>NB\rightarrow B</M> transition matrix, and
##  <C>d2, A2</C> are the delay and area of the inverse transition matrix
##  <M>B \rightarrow NB</M>. Methods <Ref Oper="TransitionMatrix"/> and
##  <Ref Oper="WeightMatrixBoth"/> are used to compute the profile.
##  <C>FindSmallestAreaNBtoBProfile</C> returns the profile with the smallest
##  <C>A1+A2</C> w.r.t. the given $B$. If two profiles have the same cumulative
##  area, the delays are used as a secondary criterion, and if there is still
##  a deuce, the profile with the smallest <C>e</C> is chosen.<P/>
##  <Example>
##  <![CDATA[
##  gap> F := GF(2^7);; B := Basis(F);; FindNormalFFEsIgnoreConjugates(F);
##  [ 13, 19, 21, 27, 31, 43, 63 ]
##  gap> lambda := RootOfDefiningPolynomial(F); B := GeneratePB(F, lambda);
##  Z(2^7)
##  Basis( GF(2^7), [ Z(2)^0, Z(2^7), Z(2^7)^2, Z(2^7)^3, Z(2^7)^4, Z(2^7)^5,
##  Z(2^7)^6 ] )
##  gap> ProfileNBtoBTransitionMat(B);
##  [ [ 7, 29, 7, 31, 13 ], [ 7, 33, 6, 25, 19 ], [ 7, 33, 6, 27, 21 ],
##  [ 7, 27, 6, 33, 27 ], [ 7, 31, 6, 29, 31 ], [ 7, 27, 5, 27, 43 ],
##  [ 7, 25, 6, 33, 63 ] ]
##  gap> FindSmallestAreaNBtoBProfile(B);
##  [ 7, 27, 5, 27, 43 ]
##  ]]>
##  </Example>
##  </Description>
##  </ManSection>
##  <#/GAPDoc>
DeclareOperation( "ProfileNBtoBTransitionMat" , [IsBasis]);
DeclareOperation( "FindSmallestAreaNBtoBProfile" , [IsBasis]);
#DeclareOperation( "FindSmallestDelayNBtoBProfile" , [IsBasis]);

#############################################################################
##
#O  ProfileGamma( <B>.) . . . . . . .
#   finds the constant with best matrix-vector multiplier wrt B
##
##  <#GAPDoc Label="ProfileGamma">
##  <ManSection>
##  <Meth Name="ProfileGamma" Arg="B"/>
##  <Meth Name="FindSmallestAreaGamma" Arg="B"/>
##  <Meth Name="FindSmallestDelayGamma" Arg="B"/>
##
##  <Description>
##  <C>ProfileGamma</C> computes the profiles for constants
##  <M>g^{e_i}</M>, <M>i=1, 2, \dots</M>,
##  where  <M>e_i</M> are the exponents and <M>g</M> is the generator of the
##  finite <A>F</A>. Only the coset leaders are used as exponents.
##  The profile <C>[d, A, e1, e2, \dots]</C>,
##  where <C>d</C> and <C>A</C> are the delay and area of the matrix-vector
##  multipliers, is grouped by exponents when the delay and area of their
##  corresponding matrices are the same. The multipliers are obtained with
##  <Ref Oper="MatrixMultByConst"/>.<P/>
##  Methods <C>FindSmallestAreaGamma</C> and <C>FindSmallestDelayGamma</C>
##  return the constants that fit the given criteria.
##  <Example>
##  <![CDATA[
##  gap> F := GF(2^7);; B := Basis(F);; FindNormalFFEsIgnoreConjugates(F);
##  [ 13, 19, 21, 27, 31, 43, 63 ]
##  gap> g := GeneratorOfField(F);; NB := GenerateNB(F, g^43);;
##  gap> profile := ProfileGamma(NB);; for i in profile do Display(i); od;
##  [ 4, 20, 1, 11 ]
##  [ 4, 22, 3 ]
##  [ 5, 24, 5 ]
##  [ 4, 19, 7, 47 ]
##  [ 5, 26, 9 ]
##  [ 5, 27, 13 ]
##  [ 6, 26, 15, 23 ]
##  [ 6, 31, 19 ]
##  [ 7, 29, 21 ]
##  [ 6, 23, 27 ]
##  [ 6, 32, 29 ]
##  [ 5, 29, 31 ]
##  [ 4, 21, 43 ]
##  [ 6, 28, 55 ]
##  [ 5, 25, 63 ]
##  gap> FindSmallestAreaGamma(NB);
##  Z(2^7)^7
##  gap> FindSmallestDelayGamma(NB);
##  Z(2^7)^7
##  ]]>
##  </Example>
##  </Description>
##  </ManSection>
##  <#/GAPDoc>
DeclareOperation( "ProfileGamma" , [IsBasis] );
DeclareOperation( "FindSmallestAreaGamma" , [IsBasis] );
DeclareOperation( "FindSmallestDelayGamma" , [IsBasis] );


Print("findElm.gd OK,\t");
#E  findElm.gd  . . . . . . . . . . . . . . . . . . . . . . . . . . . ends here
